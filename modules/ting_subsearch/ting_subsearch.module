<?php

/**
 * @file
 * Ting Subsearch
 */

use Ting\Search\TingSearchResultInterface;

/**
 * Implements hook_menu().
 */
function ting_subsearch_menu() {
  $items = [];

  $items['admin/config/ding/subsearch'] = [
    'title' => 'Ting subsearch',
    'description' => 'Configure ting subsearch triggers and settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ting_subsearch_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
  ];

  return $items;
}

/**
 * Admin settings form for subsearch modules.
 */
function ting_subsearch_admin_settings_form($form, &$form_state) {
  $form = [];

  $form['subsearch'] = [
    '#type' => 'fieldset',
    '#title' => t('Ting Subsearch'),
    '#description' => t('Subsearch modules allow additional searches to be made based on predefined conditions.'),
  ];

  return system_settings_form($form);
}

/**
 * Implements hook_opensearch_pre_execute().
 */
function ting_subsearch_opensearch_pre_execute($request) {
  if (get_class($request) != 'TingClientSearchRequest') {
    return;
  }

  // These modules needs the facet genreCategory returned from the well, so
  // ensure it is set if one or both of them are enabled.
  if (module_exists('ting_subsearch_translate') || module_exists('ting_subsearch_secondary')) {
    $facets = $request->getFacets();
    if (!in_array('facet.genreCategory', $facets)) {
      $facets[] = 'facet.genreCategory';
      $request->setFacets($facets);
    }
  }
}

/**
 * Implements hook_theme().
 */
function ting_subsearch_theme() {
  return [
    'ting_subsearch_message' => [
      'variables' => [
        'message' => NULL,
        'type' => NULL,
        'suggestion' => NULL,
        'suggestion_num_results' => NULL,
        'original_search' => NULL,
        'original_search_num_results' => NULL,
      ]
    ]
  ];
}

/**
 * Theme preprocess function for ting_subsearch_message.
 */
function template_preprocess_ting_subsearch_message(&$variables) {
  $variables['classes_array'] = [];
  $variables['attributes_array'] = [];
  $type = $variables['type'];
  $variables['theme_hook_suggestions'][] = 'ting_subsearch_message__' . $type;
  $variables['attributes_array']['id'] = 'ting-subsearch-message-' . $type;
}

/**
 * Theme process function for ting subsearch message.
 */
function template_process_ting_subsearch_message(&$variables) {
  $variables['classes'] = implode(' ', $variables['classes_array']);
  $variables['attributes'] = drupal_attributes($variables['attributes_array']);
}

/**
 * Returns default HTML for ting subsearch message.
 */
function theme_ting_subsearch_message($variables) {
  $message = $variables['message'];
  $classes = $variables['classes'];
  $attributes = $variables['attributes'];

  $output = '<div class="ting-subsearch-message-wrapper">';
  $output .= "<div class='ting-subsearch-message $classes'$attributes>";
  $output .= $message;
  $output .= '</div></div>';

  return $output;
}

/**
 * Do a separate secondary search request.
 *
 * @param string $keys
 *   The search phrase.
 * @param array $conditions
 *   The conditions to pass to the ting_search execute hook.
 *
 * @return TingSearchResultInterface
 *   The search result of the secondary search.
 */
function ting_subsearch_do_secondary_search($keys, $conditions = []) {
  drupal_static_reset('ting_search_search_execute');
  search_data($keys, 'ting_search', $conditions);
  return ting_search_current_results();
}

/**
 * Custom trigger fields validation.
 *
 * Validate fields factor field.
 *
 * @param $element
 * @param $form_state
 */
function ting_subsearch_factor_field_validate($element, &$form_state) {
  $value = $element['#value'];
  if ($value !== '' && (!is_numeric($value) || $value <= 0)) {
    form_error($element, t('%name must be a positive number', [
      '%name' => $element['#title'],
    ]));
  }
}

/**
 * Check nonfiction / fiction ratio against $factor.
 *
 * @param TingSearchResultInterface $results
 *   A non-zero hit search result object with genreCategory facet.
 * @param float $factor
 *   The factor the ratio to check against.
 *
 * @return boolean
 *   FALSE if $nonfiction / $fiction < $factor and $fiction > 0.
 *   TRUE otherwise.
 */
function ting_subsearch_check_genre_ratio(TingSearchResultInterface $results, $factor) {
  $facets = $results->getFacets();
  if (empty($facets)) {
    return FALSE;
  }

  $terms = $facets['facet.genreCategory']->getTerms();
  $nonfiction = isset($terms['nonfiktion']) ? (int) $terms['nonfiktion']->getCount() : 0;
  $fiction = isset($terms['fiktion']) ? (int) $terms['fiktion']->getCount() : 0;

  // Avoid division by zero.
  if ($fiction == 0) {
    // This function should be called with non-zero search result, so
    // $nonfiction should be non-zero and we therefore return TRUE.
    return TRUE;
  }
  return $nonfiction / $fiction >= $factor;
}
