<?php

/**
 * @file
 * Translated search.
 */

use GuzzleHttp\Client as HttpClient;
use GuzzleHttp\Exception\ClientException as GuzzleClientException;
use Ting\Search\TingSearchResultInterface;

/**
 * Implements hook_ctools_plugin_directory().
 */
function ting_subsearch_translate_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_ting_subsearch_info().
 */
function ting_subsearch_translate_ting_subsearch_info() {
  return [
    'ting_subsearch_translate' => [
      'title' => t('Ting subsearch translate'),
      'description' => t('Trigger subsearches with translated user searches and show suggestions.'),
      'trigger conditions' => [
        'subsearch' => t('User search result returned 0 results or nonfiction / fiction ratio is above or equel to !factor', [
          '!factor' => variable_get('ting_subsearch_translate_factor', 50),
        ]),
        'suggestion' => t('Subsearch result count / User search result count is above or equal to !factor', [
          '!factor' => variable_get('ting_subsearch_translate_ps_factor', 10),
        ]),
      ],
    ],
  ];
}

/**
 * Implements hook_ting_subsearch_info().
 */
function ting_subsearch_translate_ting_subsearch_info2() {
  $trigger_settings = [];
  $settings = [];

  // Trigger settings.
  $trigger_settings['ting_subsearch_translate_factor'] = [
    '#type' => 'textfield',
    '#title' => t('Minimum ratio between nonfiction and fiction'),
    '#description' => t('The minimum ratio of nonfiction to fiction in user search result to trigger translation. Use a decimal value for the ratio with "." as decimal separator'),
    '#default_value' => variable_get('ting_subsearch_translate_factor', 50),
    '#element_validate' => ['ting_subsearch_factor_field_validate'],
  ];
  $trigger_settings['ting_subsearch_translate_ps_factor'] = [
    '#type' => 'textfield',
    '#title' => t('Minimum ratio between suggestion and user search results'),
    '#description' => t('The minimum ratio between suggestion and user search results to trigger suggestion. Use a decimal value for the ratio with "." as decimal separator'),
    '#default_value' => variable_get('ting_subsearch_translate_ps_factor', 10),
    '#element_validate' => ['ting_subsearch_factor_field_validate'],
  ];

  // Other settings.
  $settings['ting_subsearch_translate_url'] = [
    '#type' => 'textfield',
    '#title' => t('Google translation service url'),
    '#description' => t('Google Translation API endpoint. <strong>Example:</strong> https://www.googleapis.com/language/translate/v2'),
    '#default_value' => variable_get('ting_subsearch_translate_url', 'https://www.googleapis.com/language/translate/v2'),
  ];
  $settings['ting_subsearch_translate_google_key'] = [
    '#type' => 'textfield',
    '#title' => t('Google Cloud Translation API key'),
    '#description' => t('You need to have an API key configured with billing for this to work. take a look at <a href="https://cloud.google.com/translate/pricing">Pricing</a>'),
    '#default_value' => variable_get('ting_subsearch_translate_google_key', ''),
  ];

  return [
    'ting_subsearch_translate' => [
      'title' => t('Ting subsearch translate'),
      'description' => t('Trigger subsearches with translated user searches and show suggestions.'),
      'trigger_settings' => $trigger_settings,
      'settings' => $settings,
    ],
  ];
}

/**
 * Implements hook_opensearch_pre_execute().
 */
function ting_subsearch_translate_opensearch_pre_execute($request) {
  if (get_class($request) != 'TingClientSearchRequest') {
    return;
  }
  // Ensure that facet genreCategory is returned from the well, since we need
  // it to calculate genre ratio.
  // See: ting_subsearch_translate_content_type_render().
  // See: ting_subsearch_get_genre_ratio().
  $facets = $request->getFacets();
  if (!in_array('facet.genreCategory', $facets)) {
    $facets[] = 'facet.genreCategory';
    $request->setFacets($facets);
  }
}

/**
 * Implements hook_ting_subsearch_ajax_placeholder_callback().
 */
function ting_subsearch_translate_ting_subsearch_ajax_placeholder_callback(TingSearchResultInterface $search_result) {
  $message = '';

  // Get the user search request and keys and attempt to find suggestion.
  $search_request = $search_result->getSearchRequest();
  $keys = $search_request->getFullTextQuery();
  $suggestion = ting_subsearch_translate_suggest_translated_keys($keys);

  if (!$suggestion) {
    return $message;
  }

  // The two search are the same so don't show the suggestion.
  if (drupal_strtolower($suggestion) == drupal_strtolower($keys)) {
    return $message;
  }

  $subsearch_request = $search_request->withFullTextQuery($suggestion);
  $subsearch_result = ting_subseach_do_subsearch($subsearch_request);
  $subsearch_num_results = $subsearch_result->getNumTotalObjects();

  // No reason to continue if subsearch didn't provide any results.
  if ($subsearch_num_results == 0) {
    return $message;
  }

  $factor = variable_get('ting_subsearch_translate_ps_factor', 10);
  // User search number of results.
  $num_results = $search_result->getNumTotalObjects();

  if ($num_results == 0 || $subsearch_num_results / $num_results >= $factor) {
    $message = t('Search in english <strong>"@suggestion"</strong> - returns <strong>!subsearch-num-results</strong> hits', [
      '@suggestion' => $suggestion,
      '!subsearch-num-results' => $subsearch_num_results,
    ]);

    $message = [
      '#theme' => 'ting_subsearch_suggestion_message',
      '#message' => $message,
      '#subsearch_result' => $subsearch_result,
      '#module' => 'ting_subsearch_translate',
    ];
  }

  return $message;
}

/**
 * Finds suggestion based on Google translation.
 *
 * @param string $original_search
 *   The original search phrase.
 *
 * @return string|bool
 *   The translation or FALSE if no translation was obtained.
 */
function ting_subsearch_translate_suggest_translated_keys($original_search) {
  $original_search = ting_subsearch_normalize_keys($original_search);

  $params = [];
  $params['q'] = $original_search;
  $params['key'] = variable_get('ting_subsearch_translate_google_key', '');
  $params['source'] = 'da';
  $params['target'] = 'en';

  try {
    $client = new HttpClient();
    $response = $client->get(
      variable_get('ting_subsearch_translate_url', 'https://www.googleapis.com/language/translate/v2'),
      [
        'query' => $params,
        'headers' => [
          'Accept' => 'application/json',
        ],
      ]
    );
    $result = json_decode($response->getBody());

    if (!empty($result->data->translations[0]->translatedText)) {
      $translation = (string) $result->data->translations[0]->translatedText;
      return html_entity_decode($translation, ENT_QUOTES);
    }
  }
  catch (GuzzleClientException $e) {
    watchdog_exception('ting_subsearch_translate', $e);
    return FALSE;
  }

  return FALSE;
}
