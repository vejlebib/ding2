<?php

/**
 * @file
 * Translated search.
 */

use GuzzleHttp\Client as HttpClient;
use GuzzleHttp\Exception\ClientException as GuzzleClientException;
use Ting\Search\NullSearchResult;

// Load Field module hooks.
module_load_include('inc', 'ting_subsearch_translate', 'ting_subsearch_translate.admin');

/**
 * Implements hook_menu().
 */
function ting_subsearch_translate_menu() {
  $items['subsearch_translate'] = [
    'title' => 'Subsearch Secondary Suggestions',
    'description' => 'AJAXify request for subsearch translate suggestions',
    'page callback' => 'ting_subsearch_translate_ajax_callback',
    'access callback' => TRUE,
  ];

  return $items;
}

/**
 * Custom AJAX menu callback.
 */
function ting_subsearch_translate_ajax_callback() {
  $message = '';
  if (!empty($_POST)) {
    $keys = $_POST['keys'];
    $conditions = $_POST['conditions'];
    $results = unserialize($_POST['results']);

    $message = ting_subsearch_translate_get_message($keys, $conditions, $results);
  }

  drupal_json_output($message);
  drupal_exit();
}

/**
 * Generation of suggestion message.
 *
 * @param string $keys
 * @param array $conditions
 * @param object $results
 *
 * @return string|void
 * @throws \TingClientException
 * @throws \Ting\Search\SearchProviderException
 */
function ting_subsearch_translate_get_message($keys, $conditions, $results) {
  $message = '';

  if ($results instanceof NullSearchResult) {
    return;
  }

  // If no google api key is set we cannot translate.
  if (empty(variable_get('ting_subsearch_translate_google_key', ''))) {
    return $message;
  }

  $original_search_num_results = $results->getNumTotalObjects();

  if ($original_search_num_results) {
    $facets = $results->getFacets();

    // If any of fiction or non fiction is empty we cannot do the calculation.
    // Simply exit for now.
    if (!isset($facets['facet.genreCategory'])) {
      watchdog('subsearch_translate', 'You need to enable facet.genreCategory in order for this to work.', [], WATCHDOG_WARNING);
      return $message;
    }

    $terms = $facets['facet.genreCategory']->getTerms();
    $nonfiction = isset($terms['nonfiktion']) ? $terms['nonfiktion']->getCount() : 0;
    $fiction = isset($terms['fiktion']) ? $terms['fiktion']->getCount() : 0;

    // Calculate the ratio of $fiction in relation to non-fiction.
    $fn_ratio = $nonfiction / $fiction;
    if ((float) variable_get('ting_subsearch_translate_factor', 50) < $fn_ratio) {
      $suggestion = ting_subsearch_suggested_keys($keys, 'ting_subsearch_translate_suggest_translated_keys');

      if ($suggestion) {
        $suggestion = drupal_strtolower($suggestion);
        if ($suggestion == drupal_strtolower($keys)) {
          // The two search are the same. So no need to do extra search query.
          return $message;
        }

        $suggestion_result = ting_subsearch_do_secondary_search($suggestion);
        $suggestion_num_result = $suggestion_result->numTotalObjects;

        $ratio = $suggestion_num_result / $original_search_num_results;

        if ($ratio > (float) variable_get('ting_subsearch_translate_ps_factor', 10)) {
          if (!empty($suggestion_num_result)) {
            $options = ['query' => ''];
            if (module_exists('ting_field_search')) {
              $profile = ting_field_search_get_active_profile();
              if ($profile) {
                $options['query'] = ['profile' => rawurlencode($profile->name)];
              }
            }

            $message = t('Search in english <strong>"@suggestion"</strong> - returns <strong>!suggestion-num-results</strong> hits', [
              '@suggestion' => $suggestion,
              '!suggestion-num-results' =>  $suggestion_num_result,
            ]);

            $message = theme('ting_subsearch_message__translate', [
              'message' => l($message, 'search/ting/' . $suggestion, [
                'html' => TRUE,
                'attributes' => ['target' => 'blank'],
              ]),
              'type' => 'translate',
              'suggestion' => $suggestion,
              'suggestion_num_results' => $suggestion_num_results,
              'original_search' => $keys,
              'original_search_num_results' => $original_search_num_results,
            ]);
          }
        }
      }
    }
  }
  else {
    $suggestion = ting_subsearch_suggested_keys($keys, 'ting_subsearch_translate_suggest_translated_keys');

    if ($suggestion) {
      $suggestion = drupal_strtolower($suggestion);
      $suggestion_result = ting_subsearch_do_secondary_search($suggestion);
      $suggestion_num_result = $suggested_result->numTotalObjects;

      $options = ['query' => ''];
      if (module_exists('ting_field_search')) {
        $profile = ting_field_search_get_active_profile();
        if ($profile) {
          $options['query'] = ['profile' => rawurlencode($profile->name)];
        }
      }

      if ($suggestion_num_result > 0) {
        $message = t('Search in english <strong>"@suggestion"</strong> - returns <strong>!suggestion-num-results</strong> hits', [
          '@suggestion' => $suggestion,
          '!suggestion-num-results' =>  $suggestion_num_result,
        ]);

        $message = theme('ting_subsearch_message__translate', [
          'message' => l($message, 'search/ting/' . $suggestion, [
            'html' => TRUE,
            'attributes' => ['target' => 'blank'],
          ]),
          'type' => 'translate',
          'suggestion' => $suggestion,
          'suggestion_num_results' => $suggestion_num_results,
          'original_search' => $keys,
          'original_search_num_results' => $original_search_num_results,
        ]);
      }
    }
  }

  return $message;
}

/**
 * Implements hook_ting_search_results_prefix().
 */
function ting_subsearch_translate_ting_search_results_prefix($keys, $conditions, $results) {
  if ($results->getNumTotalObjects() != 0) {
    drupal_add_js(
      [
        'subsearch_translate' => [
          'keys' => $keys,
          'conditions' => $conditions,
          'results' => serialize($results),
        ],
      ],
      'setting'
    );

    drupal_add_js(drupal_get_path('module', 'ting_subsearch_translate') . '/js/subsearch_translate.js', [
      'type' => 'file',
      'scope' => 'footer',
    ]);

    // Output a placeholder to be replaced with the actual content returned
    // from AJAX callback.
    return '<div id="ting-subsearch-translate-placeholder"></div>';
  }
}

/**
 * Finds suggested keys based on Google translation.
 *
 * @param $keys
 *   The search phrase.
 *
 * @return string|bool
 *   The translation or FALSE if no translation was obtained.
 */
function ting_subsearch_translate_suggest_translated_keys($keys) {
  $params = [];
  $params['q'] = $keys;
  $params['key'] = variable_get('ting_subsearch_translate_google_key', '');
  $params['source'] = 'da';
  $params['target'] = 'en';

  try {
    $client = new HttpClient();
    $response = $client->get(
      variable_get('ting_subsearch_translate_url', 'https://www.googleapis.com/language/translate/v2'),
      [
        'query' => $params,
        'headers' => [
          'Accept' => 'application/json',
        ],
      ]
    );
    $result = json_decode($response->getBody());

    if (!empty($result->data->translations[0]->translatedText)) {
      $translation = (string) $result->data->translations[0]->translatedText;
      return html_entity_decode($translation, ENT_QUOTES);
    }
  } catch (GuzzleClientException $e) {
    watchdog_exception('ting_subsearch_translate', $e);
    return FALSE;
  }

  return FALSE;
}
